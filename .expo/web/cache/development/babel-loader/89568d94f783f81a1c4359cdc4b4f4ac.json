{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport React, { useState } from \"react\";\nimport styleTabletForPercents from \"../Components/ComponetsPercent/css/styleTabletForPercents\";\nimport ButtonsNumeric from \"../Components/ComponetsCalculator/ButtonsNumeric/ButtonsNumeric\";\nimport ViewNumeric from \"../Components/ComponetsCalculator/ViewNumeric/ViewNumeric\";\nimport { evaluate } from 'mathjs';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SectionCalculator = function SectionCalculator(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      Numbers = _useState2[0],\n      setNumbers = _useState2[1];\n\n  var marcNumbers = function marcNumbers(val) {\n    setNumbers(Numbers + val);\n  };\n\n  var calculate = function calculate() {\n    if (Numbers) {\n      setNumbers(evaluate(Numbers));\n    } else {\n      alert('Introdusca un valor');\n    }\n  };\n\n  return _jsxs(View, {\n    style: styleTabletForPercents.contContainer,\n    children: [_jsxs(View, {\n      style: styleTabletForPercents.contInfo,\n      children: [_jsx(View, {\n        children: _jsx(ViewNumeric, {\n          insertNumber: Numbers\n        })\n      }), _jsx(View, {\n        children: _jsx(ButtonsNumeric, {\n          insertNumber: marcNumbers,\n          calculate: calculate,\n          BtnClear: setNumbers\n        })\n      })]\n    }), _jsxs(View, {\n      style: styleTabletForPercents.contBtnMenuBottom,\n      children: [_jsx(TouchableHighlight, {\n        style: styles.submit,\n        onPress: function onPress() {\n          return _this.submitSuggestion(_this.props);\n        },\n        underlayColor: \"#fff\",\n        children: _jsx(Text, {\n          style: [_this.getFontSize(), styles.submitText],\n          children: \"Submit\"\n        })\n      }), _jsx(View, {\n        style: styleTabletForPercents.Buttons,\n        children: _jsx(Button, {\n          title: \"%\",\n          onPress: function onPress() {\n            return navigation.navigate('SectionPercents');\n          }\n        })\n      }), _jsx(View, {\n        style: styleTabletForPercents.Buttons,\n        children: _jsx(Button, {\n          disabled: true,\n          style: styleTabletForPercents.Buttons,\n          title: \"Calculator\",\n          onPress: function onPress() {\n            return navigation.navigate('SectionCalculator');\n          }\n        })\n      }), _jsx(View, {\n        style: styleTabletForPercents.Buttons,\n        children: _jsx(Button, {\n          style: styleTabletForPercents.Buttons,\n          title: \"Contacto\",\n          onPress: function onPress() {\n            return navigation.navigate('SectionContacto');\n          }\n        })\n      })]\n    })]\n  });\n};\n\nexport default SectionCalculator;","map":{"version":3,"names":["React","useState","styleTabletForPercents","ButtonsNumeric","ViewNumeric","evaluate","SectionCalculator","navigation","Numbers","setNumbers","marcNumbers","val","calculate","alert","contContainer","contInfo","contBtnMenuBottom","styles","submit","submitSuggestion","props","getFontSize","submitText","Buttons","navigate"],"sources":["/home/devs01/www/calculator-for-percent-android/View/SectionCalculator.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport styleTabletForPercents from \"../Components/ComponetsPercent/css/styleTabletForPercents\";\nimport ButtonsNumeric from \"../Components/ComponetsCalculator/ButtonsNumeric/ButtonsNumeric\";\nimport ViewNumeric from \"../Components/ComponetsCalculator/ViewNumeric/ViewNumeric\";\nimport { evaluate } from 'mathjs'\nimport {\n    View,\n    Text,\n    Button,\n} from 'react-native';\n\n\n\nconst SectionCalculator = ({ navigation }) => {\n\n    const [Numbers, setNumbers] = useState('')\n\n    const marcNumbers = (val) => {\n        setNumbers(Numbers + val)\n    }\n\n    const calculate = () => {\n        if (Numbers) {\n            setNumbers(evaluate(Numbers))\n        } else {\n            alert('Introdusca un valor')\n        }\n    }\n\n\n\n\n    return (\n        <View style={styleTabletForPercents.contContainer}>\n            <View style={styleTabletForPercents.contInfo}>\n\n                <View>\n                    <ViewNumeric\n                        insertNumber={Numbers}\n                    />\n                </View>\n\n                <View>\n                    <ButtonsNumeric\n                        insertNumber={marcNumbers}\n                        calculate={calculate}\n                        BtnClear={setNumbers}\n                    />\n                </View>\n            </View>\n\n\n\n            <View style={styleTabletForPercents.contBtnMenuBottom}>\n\n                <TouchableHighlight\n                    style={styles.submit}\n                    onPress={() => this.submitSuggestion(this.props)}\n                    underlayColor='#fff'>\n                    <Text style={[this.getFontSize(), styles.submitText]}>Submit</Text>\n                </TouchableHighlight>\n                \n                <View style={styleTabletForPercents.Buttons}>\n                    <Button\n                        title=\"%\"\n                        onPress={() => navigation.navigate('SectionPercents')}\n                    />\n                </View>\n\n                <View style={styleTabletForPercents.Buttons}>\n                    <Button\n                        disabled\n                        style={styleTabletForPercents.Buttons}\n                        title=\"Calculator\"\n                        onPress={() => navigation.navigate('SectionCalculator')}\n                    />\n                </View>\n\n                <View style={styleTabletForPercents.Buttons}>\n                    <Button\n                        style={styleTabletForPercents.Buttons}\n                        title=\"Contacto\"\n                        onPress={() => navigation.navigate('SectionContacto')}\n                    />\n                </View>\n            </View>\n        </View>\n    )\n}\n\n\nexport default SectionCalculator;\n"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,sBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,QAAyB,QAAzB;;;;;;;AASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAE1C,gBAA8BN,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;IACzBF,UAAU,CAACD,OAAO,GAAGG,GAAX,CAAV;EACH,CAFD;;EAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpB,IAAIJ,OAAJ,EAAa;MACTC,UAAU,CAACJ,QAAQ,CAACG,OAAD,CAAT,CAAV;IACH,CAFD,MAEO;MACHK,KAAK,CAAC,qBAAD,CAAL;IACH;EACJ,CAND;;EAWA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEX,sBAAsB,CAACY,aAApC;IAAA,WACI,MAAC,IAAD;MAAM,KAAK,EAAEZ,sBAAsB,CAACa,QAApC;MAAA,WAEI,KAAC,IAAD;QAAA,UACI,KAAC,WAAD;UACI,YAAY,EAAEP;QADlB;MADJ,EAFJ,EAQI,KAAC,IAAD;QAAA,UACI,KAAC,cAAD;UACI,YAAY,EAAEE,WADlB;UAEI,SAAS,EAAEE,SAFf;UAGI,QAAQ,EAAEH;QAHd;MADJ,EARJ;IAAA,EADJ,EAoBI,MAAC,IAAD;MAAM,KAAK,EAAEP,sBAAsB,CAACc,iBAApC;MAAA,WAEI,KAAC,kBAAD;QACI,KAAK,EAAEC,MAAM,CAACC,MADlB;QAEI,OAAO,EAAE;UAAA,OAAM,KAAI,CAACC,gBAAL,CAAsB,KAAI,CAACC,KAA3B,CAAN;QAAA,CAFb;QAGI,aAAa,EAAC,MAHlB;QAAA,UAII,KAAC,IAAD;UAAM,KAAK,EAAE,CAAC,KAAI,CAACC,WAAL,EAAD,EAAqBJ,MAAM,CAACK,UAA5B,CAAb;UAAA;QAAA;MAJJ,EAFJ,EASI,KAAC,IAAD;QAAM,KAAK,EAAEpB,sBAAsB,CAACqB,OAApC;QAAA,UACI,KAAC,MAAD;UACI,KAAK,EAAC,GADV;UAEI,OAAO,EAAE;YAAA,OAAMhB,UAAU,CAACiB,QAAX,CAAoB,iBAApB,CAAN;UAAA;QAFb;MADJ,EATJ,EAgBI,KAAC,IAAD;QAAM,KAAK,EAAEtB,sBAAsB,CAACqB,OAApC;QAAA,UACI,KAAC,MAAD;UACI,QAAQ,MADZ;UAEI,KAAK,EAAErB,sBAAsB,CAACqB,OAFlC;UAGI,KAAK,EAAC,YAHV;UAII,OAAO,EAAE;YAAA,OAAMhB,UAAU,CAACiB,QAAX,CAAoB,mBAApB,CAAN;UAAA;QAJb;MADJ,EAhBJ,EAyBI,KAAC,IAAD;QAAM,KAAK,EAAEtB,sBAAsB,CAACqB,OAApC;QAAA,UACI,KAAC,MAAD;UACI,KAAK,EAAErB,sBAAsB,CAACqB,OADlC;UAEI,KAAK,EAAC,UAFV;UAGI,OAAO,EAAE;YAAA,OAAMhB,UAAU,CAACiB,QAAX,CAAoB,iBAApB,CAAN;UAAA;QAHb;MADJ,EAzBJ;IAAA,EApBJ;EAAA,EADJ;AAwDH,CA3ED;;AA8EA,eAAelB,iBAAf"},"metadata":{},"sourceType":"module"}