{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport styleTabletForPercents from \"../Components/ComponetsPercent/css/styleTabletForPercents\";\nimport InputPercents from \"../Components/ComponetsPercent/InputPercents/InputPercents\";\nimport InputsMont from \"../Components/ComponetsPercent/InputMont/InputMont\";\nimport ButtonCalcular from \"../Components/ComponetsPercent/ButtonCalcular/ButtonCalcular\";\nimport ButtonMontRest from \"../Components/ComponetsPercent/ButtonMontRest/ButtonMonsRest\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SectionPercents = function SectionPercents(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      valPercents = _useState2[0],\n      setvalPercent = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      montTotal = _useState4[0],\n      setMontTotal = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valMont = _useState6[0],\n      setValMont = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      montPag = _useState8[0],\n      setMontPag = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      valMontRest = _useState10[0],\n      setValMontRest = _useState10[1];\n\n  var numPercent = 100;\n  var montImp = valMont;\n  var montPagImp = montPag;\n  var montRestImp = valMontRest;\n\n  var btnClacular = function btnClacular() {\n    setValMont(montTotal);\n    setMontPag(valPercents * montTotal / numPercent);\n  };\n\n  var btnMonRest = function btnMonRest() {\n    setValMontRest(montTotal - montPag);\n  };\n\n  return _jsxs(View, {\n    style: styleTabletForPercents.contContainer,\n    children: [_jsxs(ScrollView, {\n      children: [_jsxs(View, {\n        style: styleTabletForPercents.contTablet,\n        children: [_jsx(View, {\n          style: styleTabletForPercents.tabletHeadBgColor,\n          children: _jsxs(View, {\n            style: styleTabletForPercents.tabletHead,\n            children: [_jsx(Text, {\n              style: styleTabletForPercents.infoTablet,\n              children: \"N\"\n            }), _jsx(Text, {\n              style: styleTabletForPercents.infoTablet,\n              children: \"%\"\n            })]\n          })\n        }), _jsxs(View, {\n          style: styleTabletForPercents.contInfoTablet,\n          children: [_jsxs(View, {\n            style: styleTabletForPercents.displayTable,\n            children: [_jsxs(Text, {\n              style: styleTabletForPercents.infoTablet,\n              children: [\"Monto Total: \", montImp.toLocaleString(\"fr-FR\")]\n            }), _jsx(Text, {\n              style: styleTabletForPercents.infoTablet,\n              children: \"(100%)\"\n            })]\n          }), _jsxs(View, {\n            style: styleTabletForPercents.displayTable,\n            children: [_jsxs(Text, {\n              style: styleTabletForPercents.infoTablet,\n              children: [\"Monto Rest: \", montRestImp]\n            }), _jsxs(Text, {\n              style: styleTabletForPercents.infoTablet,\n              children: [\"Pago de %: \", montPagImp]\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styleTabletForPercents.contInfo,\n        children: [_jsx(InputPercents, {\n          inputValPercents: setvalPercent\n        }), _jsx(InputsMont, {\n          InputsValMont: setMontTotal\n        })]\n      }), _jsxs(View, {\n        style: styleTabletForPercents.contBtn,\n        children: [_jsx(ButtonCalcular, {\n          ButtonCalcular: btnClacular\n        }), _jsx(ButtonMontRest, {\n          ButtonRest: btnMonRest\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styleTabletForPercents.contBtnMenuBottom,\n      children: [_jsx(Button, {\n        style: styleTabletForPercents.bordeRadius0,\n        disabled: true,\n        title: \"%\",\n        onPress: function onPress() {\n          return navigation.navigate('SectionPercents');\n        }\n      }), _jsx(Button, {\n        style: styleTabletForPercents.bordeRadius0,\n        title: \"Calculator\",\n        onPress: function onPress() {\n          return navigation.navigate('SectionCalculator');\n        }\n      }), _jsx(Button, {\n        style: styleTabletForPercents.bordeRadius0,\n        title: \"SectionContacto\",\n        onPress: function onPress() {\n          return navigation.navigate('SectionContacto');\n        }\n      }), _jsx(Button, {\n        style: styleTabletForPercents.bordeRadius0,\n        title: \"SectionContacto\",\n        onPress: function onPress() {\n          return navigation.navigate('SectionContacto');\n        }\n      })]\n    })]\n  });\n};\n\nexport default SectionPercents;","map":{"version":3,"names":["React","useState","styleTabletForPercents","InputPercents","InputsMont","ButtonCalcular","ButtonMontRest","SectionPercents","navigation","valPercents","setvalPercent","montTotal","setMontTotal","valMont","setValMont","montPag","setMontPag","valMontRest","setValMontRest","numPercent","montImp","montPagImp","montRestImp","btnClacular","btnMonRest","contContainer","contTablet","tabletHeadBgColor","tabletHead","infoTablet","contInfoTablet","displayTable","toLocaleString","contInfo","contBtn","contBtnMenuBottom","bordeRadius0","navigate"],"sources":["/home/devs01/www/calculator-for-percent-android/View/SectionPercents.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport styleTabletForPercents from \"../Components/ComponetsPercent/css/styleTabletForPercents\";\nimport InputPercents from \"../Components/ComponetsPercent/InputPercents/InputPercents\";\nimport InputsMont from \"../Components/ComponetsPercent/InputMont/InputMont\";\nimport ButtonCalcular from \"../Components/ComponetsPercent/ButtonCalcular/ButtonCalcular\";\nimport ButtonMontRest from \"../Components/ComponetsPercent/ButtonMontRest/ButtonMonsRest\";\nimport {\n    View,\n    Text,\n    Button,\n    ScrollView\n} from 'react-native';\n\nconst SectionPercents = ({ navigation }) => {\n\n    const [valPercents, setvalPercent] = useState(0);\n    const [montTotal, setMontTotal] = useState(0);\n    const [valMont, setValMont] = useState(0)\n    const [montPag, setMontPag] = useState(0);\n    const [valMontRest, setValMontRest] = useState(0);\n\n    const numPercent = 100;\n    const montImp = valMont;\n    const montPagImp = montPag;\n    const montRestImp = valMontRest;\n\n\n    const btnClacular = () => {\n        setValMont(montTotal)\n        setMontPag((valPercents * montTotal) / numPercent);\n    }\n\n    const btnMonRest = () => {\n        setValMontRest(montTotal - montPag);\n    }\n\n    \n\n    return (\n        <View style={styleTabletForPercents.contContainer}>\n\n            <ScrollView>\n                <View style={styleTabletForPercents.contTablet}>\n                    <View style={styleTabletForPercents.tabletHeadBgColor}>\n                        <View style={styleTabletForPercents.tabletHead}>\n                            <Text style={styleTabletForPercents.infoTablet}>N</Text>\n                            <Text style={styleTabletForPercents.infoTablet}>%</Text>\n                        </View>\n                    </View>\n\n                    <View style={styleTabletForPercents.contInfoTablet}>\n                        <View style={styleTabletForPercents.displayTable}>\n                            <Text style={styleTabletForPercents.infoTablet}>Monto Total: {montImp.toLocaleString(\"fr-FR\")}</Text>\n                            <Text style={styleTabletForPercents.infoTablet}>(100%)</Text>\n                        </View>\n                        <View style={styleTabletForPercents.displayTable}>\n                            <Text style={styleTabletForPercents.infoTablet}>Monto Rest: {montRestImp}</Text>\n                            <Text style={styleTabletForPercents.infoTablet}>Pago de %: {montPagImp}</Text>\n                        </View>\n                    </View>\n                </View>\n\n                <View style={styleTabletForPercents.contInfo}>\n                    <InputPercents\n                        inputValPercents={setvalPercent}\n                    />\n\n                    <InputsMont\n                        InputsValMont={setMontTotal}\n                    />\n\n                </View>\n                <View style={styleTabletForPercents.contBtn}>\n                    <ButtonCalcular\n                        ButtonCalcular={btnClacular}\n                    />\n                    <ButtonMontRest\n                        ButtonRest={btnMonRest}\n                    />\n                </View>\n            </ScrollView>\n\n\n\n\n\n            <View style={styleTabletForPercents.contBtnMenuBottom}>\n                <Button\n                    style={styleTabletForPercents.bordeRadius0}\n                    disabled\n                    title=\"%\"\n                    onPress={() => navigation.navigate('SectionPercents')}\n                />\n                <Button\n                    style={styleTabletForPercents.bordeRadius0}\n                    title=\"Calculator\"\n                    onPress={() => navigation.navigate('SectionCalculator')}\n                />\n                <Button\n                    style={styleTabletForPercents.bordeRadius0}\n                    title=\"SectionContacto\"\n                    onPress={() => navigation.navigate('SectionContacto')}\n                />\n                <Button\n                    style={styleTabletForPercents.bordeRadius0}\n                    title=\"SectionContacto\"\n                    onPress={() => navigation.navigate('SectionContacto')}\n                />\n\n            </View>\n        </View>\n\n    )\n}\n\n\nexport default SectionPercents;\n\n\n\n"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,sBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;;;;;;;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAExC,gBAAqCP,QAAQ,CAAC,CAAD,CAA7C;EAAA;EAAA,IAAOQ,WAAP;EAAA,IAAoBC,aAApB;;EACA,iBAAkCT,QAAQ,CAAC,CAAD,CAA1C;EAAA;EAAA,IAAOU,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAA8BX,QAAQ,CAAC,CAAD,CAAtC;EAAA;EAAA,IAAOY,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA8Bb,QAAQ,CAAC,CAAD,CAAtC;EAAA;EAAA,IAAOc,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAsCf,QAAQ,CAAC,CAAD,CAA9C;EAAA;EAAA,IAAOgB,WAAP;EAAA,IAAoBC,cAApB;;EAEA,IAAMC,UAAU,GAAG,GAAnB;EACA,IAAMC,OAAO,GAAGP,OAAhB;EACA,IAAMQ,UAAU,GAAGN,OAAnB;EACA,IAAMO,WAAW,GAAGL,WAApB;;EAGA,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtBT,UAAU,CAACH,SAAD,CAAV;IACAK,UAAU,CAAEP,WAAW,GAAGE,SAAf,GAA4BQ,UAA7B,CAAV;EACH,CAHD;;EAKA,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;IACrBN,cAAc,CAACP,SAAS,GAAGI,OAAb,CAAd;EACH,CAFD;;EAMA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEb,sBAAsB,CAACuB,aAApC;IAAA,WAEI,MAAC,UAAD;MAAA,WACI,MAAC,IAAD;QAAM,KAAK,EAAEvB,sBAAsB,CAACwB,UAApC;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAExB,sBAAsB,CAACyB,iBAApC;UAAA,UACI,MAAC,IAAD;YAAM,KAAK,EAAEzB,sBAAsB,CAAC0B,UAApC;YAAA,WACI,KAAC,IAAD;cAAM,KAAK,EAAE1B,sBAAsB,CAAC2B,UAApC;cAAA;YAAA,EADJ,EAEI,KAAC,IAAD;cAAM,KAAK,EAAE3B,sBAAsB,CAAC2B,UAApC;cAAA;YAAA,EAFJ;UAAA;QADJ,EADJ,EAQI,MAAC,IAAD;UAAM,KAAK,EAAE3B,sBAAsB,CAAC4B,cAApC;UAAA,WACI,MAAC,IAAD;YAAM,KAAK,EAAE5B,sBAAsB,CAAC6B,YAApC;YAAA,WACI,MAAC,IAAD;cAAM,KAAK,EAAE7B,sBAAsB,CAAC2B,UAApC;cAAA,4BAA8DT,OAAO,CAACY,cAAR,CAAuB,OAAvB,CAA9D;YAAA,EADJ,EAEI,KAAC,IAAD;cAAM,KAAK,EAAE9B,sBAAsB,CAAC2B,UAApC;cAAA;YAAA,EAFJ;UAAA,EADJ,EAKI,MAAC,IAAD;YAAM,KAAK,EAAE3B,sBAAsB,CAAC6B,YAApC;YAAA,WACI,MAAC,IAAD;cAAM,KAAK,EAAE7B,sBAAsB,CAAC2B,UAApC;cAAA,2BAA6DP,WAA7D;YAAA,EADJ,EAEI,MAAC,IAAD;cAAM,KAAK,EAAEpB,sBAAsB,CAAC2B,UAApC;cAAA,0BAA4DR,UAA5D;YAAA,EAFJ;UAAA,EALJ;QAAA,EARJ;MAAA,EADJ,EAqBI,MAAC,IAAD;QAAM,KAAK,EAAEnB,sBAAsB,CAAC+B,QAApC;QAAA,WACI,KAAC,aAAD;UACI,gBAAgB,EAAEvB;QADtB,EADJ,EAKI,KAAC,UAAD;UACI,aAAa,EAAEE;QADnB,EALJ;MAAA,EArBJ,EA+BI,MAAC,IAAD;QAAM,KAAK,EAAEV,sBAAsB,CAACgC,OAApC;QAAA,WACI,KAAC,cAAD;UACI,cAAc,EAAEX;QADpB,EADJ,EAII,KAAC,cAAD;UACI,UAAU,EAAEC;QADhB,EAJJ;MAAA,EA/BJ;IAAA,EAFJ,EA+CI,MAAC,IAAD;MAAM,KAAK,EAAEtB,sBAAsB,CAACiC,iBAApC;MAAA,WACI,KAAC,MAAD;QACI,KAAK,EAAEjC,sBAAsB,CAACkC,YADlC;QAEI,QAAQ,MAFZ;QAGI,KAAK,EAAC,GAHV;QAII,OAAO,EAAE;UAAA,OAAM5B,UAAU,CAAC6B,QAAX,CAAoB,iBAApB,CAAN;QAAA;MAJb,EADJ,EAOI,KAAC,MAAD;QACI,KAAK,EAAEnC,sBAAsB,CAACkC,YADlC;QAEI,KAAK,EAAC,YAFV;QAGI,OAAO,EAAE;UAAA,OAAM5B,UAAU,CAAC6B,QAAX,CAAoB,mBAApB,CAAN;QAAA;MAHb,EAPJ,EAYI,KAAC,MAAD;QACI,KAAK,EAAEnC,sBAAsB,CAACkC,YADlC;QAEI,KAAK,EAAC,iBAFV;QAGI,OAAO,EAAE;UAAA,OAAM5B,UAAU,CAAC6B,QAAX,CAAoB,iBAApB,CAAN;QAAA;MAHb,EAZJ,EAiBI,KAAC,MAAD;QACI,KAAK,EAAEnC,sBAAsB,CAACkC,YADlC;QAEI,KAAK,EAAC,iBAFV;QAGI,OAAO,EAAE;UAAA,OAAM5B,UAAU,CAAC6B,QAAX,CAAoB,iBAApB,CAAN;QAAA;MAHb,EAjBJ;IAAA,EA/CJ;EAAA,EADJ;AA2EH,CApGD;;AAuGA,eAAe9B,eAAf"},"metadata":{},"sourceType":"module"}